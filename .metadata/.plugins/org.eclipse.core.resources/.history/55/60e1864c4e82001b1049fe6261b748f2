package self;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

import util.JDBCUtil;
import util.ScanUtil;

public class JDBCBoardAgain {
	
	private Connection conn;
	private Statement stmt;
	private PreparedStatement pstmt;
	private ResultSet rs;
	
	ScanUtil sc;
	
	/**
	 * 메뉴를 출력하는 메서드
	 */
	public void displayMenu(){
		System.out.println();
		System.out.println("----------------------");
		System.out.println("=== 작 업 선 택 ===");
		System.out.println("1. 전체 목록 출력");
		System.out.println("2. 새글 작성");
		System.out.println("3. 글 수정");
		System.out.println("4. 글 삭제");
		System.out.println("5. 글 검색");
		System.out.println("6. 종료");
		System.out.println("----------------------");
		System.out.print("원하는 작업 선택 >> ");
	}
	
	/**
	 * 프로그램 시작메서드
	 */
	public void start(){
		int choice = 0;
		do{
			displayMenu(); //메뉴 출력
			choice = sc.nextInt(); // 메뉴번호 입력받기
			switch(choice){
				case 1 :  // 전체 목록 출력
					displayAll();
					break;
				case 2 :  // 새글 작성
					insertTitle();
					break;
				case 3 :  // 글 수정
					updateTitle();
					break;
				case 4 :  // 글 삭제
					deleteTitle();
					break;
				case 5 :  // 글 검색
					searchTitle();
					break;
				case 6 :
					System.out.println("작업을 마칩니다.");
					break;
				default :
					System.out.println("번호를 잘못 입력했습니다. 다시입력하세요");
			}
		}while(choice!=6);
	}
	
	private void searchTitle() {
		System.out.println();
		System.out.println("검색할 글 번호를 입력하세요");
		System.out.print("입력 >>");
		String boardNo = sc.nextLine();
		
		try {
			
			conn = JDBCUtil.getConnection();
			
			String sql = "SELECT * FROM JDBC_BOARD WHERE BOARD_NO = ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, boardNo);
			
			rs = pstmt.executeQuery(sql);
		
			while(rs.next()) {
				boardNo = rs.getString("board_no");
				String boardTitle = rs.getString("board_title");
				String boardWriter = rs.getString("board_writer");
				String boardDate = rs.getString("board_date");
				String boardContent = rs.getString("board_content");
				System.out.println(boardNo + "\t" + boardTitle + "\t" + boardWriter + "\t" + boardDate + "\t" + boardContent);
			}
			System.out.println("-----------------------------------------");
			System.out.println("출력 작업 끝...");
			
		} catch(SQLException ex) {
			ex.printStackTrace();
			System.out.println(boardNo + "글 조회에 실패하였습니다.");
		} finally {
			JDBCUtil.disconnect(conn, stmt, pstmt, rs);
		}
	}

	/**
	 * 회원정보를 삭제하는 메서드(입력받은 회원ID를 이용하여 삭제한다.)
	 */
	private void deleteTitle() {
		System.out.println();
		System.out.println("삭제할 게시판 번호 정보를 입력하세요");
		System.out.print("입력 >>");
		String boardNo = sc.nextLine();
		
		try {
			
			conn = JDBCUtil.getConnection();
			
			String sql = "DELETE FROM JDBC_BOARD WHERE BOARD_NO = ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, boardNo);
			
			int cnt = pstmt.executeUpdate();
		
			if(cnt > 0) {
				System.out.println(boardNo + "글 삭제 성공");
			} else {
				System.out.println(boardNo + "글 삭제 실패");
			}
			
		} catch(SQLException ex) {
			ex.printStackTrace();
			System.out.println(boardNo + "글 삭제에 실패하였습니다.");
		} finally {
			JDBCUtil.disconnect(conn, stmt, pstmt, rs);
		}
	}

	/**
	 * 회원정보를 수정하는 메서드
	 */
	private void updateTitle() {
		String boardNo = null;
		
		System.out.println();
		System.out.println("수정할 게시판 번호를 입력하세요");
		System.out.print("입력 >>");
		boardNo = sc.nextLine();
			
		
		System.out.println("제 목 >>");
		String title = sc.nextLine();
		
		System.out.println("내 용 >>");
		String text = sc.nextLine();
		
		try {
			
			conn = JDBCUtil.getConnection();
			
			String sql =  "UPDATE JDBC_BOARD"
						  + " SET BOARD_TITLE = ? ,BOARD_CONTENT = ?"
						  + " WHERE BOARD_NO = ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, title);
			pstmt.setString(2, text);
			pstmt.setString(3, boardNo);
			
			int cnt = pstmt.executeUpdate();
		
			if(cnt > 0) {
				System.out.println(boardNo + "글 수정 성공");
			} else {
				System.out.println(boardNo + "글 수정 실패");
			}
			
		} catch(SQLException ex) {
			ex.printStackTrace();
		} finally {
			JDBCUtil.disconnect(conn, stmt, pstmt, rs);
		}
	}
	
	/**
	 * 글 전체 출력
	 */
	private void displayAll() {
		System.out.println();
		System.out.println("-------------------------------------");
		System.out.println("번호\t제목\t작성자\t날짜\t내용");
		System.out.println("-------------------------------------");
		
		try {
			
			conn = JDBCUtil.getConnection();
			
			stmt = conn.createStatement();
			
			rs = stmt.executeQuery("select * from jdbc_board");
			
			while(rs.next()) {
				String boardNo = rs.getString("board_no");
				String boardTitle = rs.getString("board_title");
				String boardWriter = rs.getString("board_writer");
				String boardDate = rs.getString("board_date");
				String boardContent = rs.getString("board_content");
				System.out.println(boardNo + "\t" + boardTitle + "\t" + boardWriter + "\t" + boardDate + "\t" + boardContent);
			}
			System.out.println("-----------------------------------------");
			System.out.println("출력 작업 끝...");
			
		} catch(SQLException ex) {
			ex.printStackTrace();
		} finally {
			JDBCUtil.disconnect(conn, stmt, pstmt, rs);
		}
	}

	/**
	 * 회원을 추가하기 위한 메서드
	 */
	private void insertTitle() {
		
		System.out.println("추가할 정보를 입력하세요");
		System.out.print("제목 >>");
		String boardTitle = sc.nextLine();
			
		System.out.println("작성자 이름 >>");
		String boardWriter = sc.nextLine();
		
		System.out.println("내용 >>");
		String boardContent = sc.nextLine();
		sc.nextLine();
		
		try {
			
			conn = JDBCUtil.getConnection();
			
			String sql = "INSERT INTO JDBC_BOARD(BOARD_NO,BOARD_TITLE,BOARD_WRITER,BOARD_DATE,BOARD_CONTENT)"
						+ " VALUES (BOARD_SEQ.NEXTVAL, ? , ?, sysdate, ?)";
					
			
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, boardTitle);
			pstmt.setString(2, boardWriter);
			pstmt.setString(3, boardContent);
			
			int cnt = pstmt.executeUpdate();
		
			if(cnt > 0) {
				System.out.println(boardTitle + "추가 성공");
			} else {
				System.out.println(boardTitle + "추가 실패");
			}
			
		} catch(SQLException ex) {
			ex.printStackTrace();
		} finally {
			JDBCUtil.disconnect(conn, stmt, pstmt, rs);
		}
	}

	public static void main(String[] args) {
		JDBCBoardAgain jdbcba = new JDBCBoardAgain();
		jdbcba.start();
	}
		
}
